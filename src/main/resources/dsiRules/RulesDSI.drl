//created on: 8 nov. 2020
package dsiRules

//list any import classes here.

import clasesMito.*;
import clasesMito.acciones.*;
import clasesMito.estados.*;
import clasesMito.Personajes.*;
import java.util.List;
import java.util.LinkedList;

//declare any global variables here

global java.util.List respuestaReglas;

//REGLAS DESDE EL PRINCIPIO

//1º REGLA: TODOS LOS PERSONAJES LIBRES : 
rule "inicial" 
	agenda-group "G1"
    when
        //conditions y definimos variable $p
      	$p : Personaje((nombre != "Ceto") && (nombre != "Minotauro"));
      	not Muerto(sujeto == $p);
      	not Preso(sujeto == $p);
      	not Libre(sujeto == $p);
      	not Vivo(sujeto == $p);
      	
    then
        //actions
        Estado libre = new Libre($p);
        insert(libre);
		Estado vivo = new Vivo($p);
		insert(vivo);
		
end
//1.1 Regla: excepcion, ceto preso
rule "Personajes presos" 
	agenda-group "G1"
    when
        //conditions y definimos variable $p
      	$p : Personaje(nombre == "Ceto"||nombre == "Minotauro");
      	not Muerto(sujeto == $p );
    then
        //actions
        Estado vivo = new Vivo($p);
        Estado pPreso  = new Preso($p);
        insert(pPreso);
		insert(vivo);
		
end

//1.2 Regla: llenar inventario vacios
rule "llenar inventarios vacios" 
	agenda-group "G1"
	when
		$p: Personaje(inventario == null); 
	then
		$p.setInventario(new LinkedList<Objeto>());
		update($p);
end



//2º REGLA: casiopea enoja a poseidon 
rule "casiopea enoja a poseidon" 

    when
      	$a: Enojar(sujeto.nombre == "Casiopea", afectadoP != null, afectadoP.nombre == "Poseidón");
      	$p: Personaje(nombre == "Ceto");
    then
        //actions
        respuestaReglas.add($p.getNombre() + " queda libre debido a enojo de " + $a.getAfectadoP().getNombre() + " hacia " + $a.getSujeto().getNombre());
		Accion poseidonLiberaCeto = new Liberar($a.getAfectadoP(), $p);
		Estado libreCeto = new Libre ($p) ;
		insert (poseidonLiberaCeto);
		insert (libreCeto);
			
end



//2.1 Regla de enojo para fase 3.6
rule "Si atalanta tiene vellocino ceto libre y apresa a Hipomedes"
    when
      	$a: Enojar(sujeto.nombre == "Atalanta", afectadoP != null, afectadoP.nombre == "Poseidón");
      	$p: Personaje(nombre == "Ceto");
    then
        //actions
        respuestaReglas.add($p.getNombre() + " queda libre debido a enojo de " + $a.getAfectadoP().getNombre() + " hacia " + $a.getSujeto().getNombre());
		Accion poseidonLiberaCeto = new Liberar($a.getAfectadoP(), $p);
		Estado libreCeto = new Libre ($p) ;
		insert (poseidonLiberaCeto);
		insert (libreCeto);
			
end




//3º REGLA: hipomenes es apresado por ceto  para fase 3.6

rule "Hipomenes es apresado por ceto"
	when 
		$e : Libre(sujeto.nombre == "Ceto")
	    Vivo(sujeto.nombre == "Ceto")
		$a: Enojar(sujeto.nombre == "Atalanta", afectadoP != null, afectadoP.nombre == "Poseidón");
		
		$p : Personaje(nombre == "Hipómenes")
		$lib : Libre(sujeto == $p)
	then 
		respuestaReglas.add(  $p +" queda presa debido a estar " + $e.getSujeto() + " libre.");
		
		Accion cetoApresaAndromeda = new Apresar($e.getSujeto(), $p);
		Estado andromedaApresada = new Preso($p);
		
		retract ($lib);
		insert(cetoApresaAndromeda);
		insert(andromedaApresada);
		
end

//3º REGLA: andromeda es apresada por ceto

rule "andromeda es apresada por ceto"
	when 
		$e : Libre(sujeto.nombre == "Ceto")
	    Vivo(sujeto.nombre == "Ceto")
		$a: Enojar(sujeto.nombre == "Casiopea", afectadoP != null, afectadoP.nombre == "Poseidón");
		
		$p : Personaje(nombre == "Andrómeda")
		$lib : Libre(sujeto == $p)
	then 
		respuestaReglas.add(  $p +" queda presa debido a estar " + $e.getSujeto() + " libre.");
		
		Accion cetoApresaAndromeda = new Apresar($e.getSujeto(), $p);
		Estado andromedaApresada = new Preso($p);
		
		retract ($lib);
		insert(cetoApresaAndromeda);
		insert(andromedaApresada);
		
end

//4º REGLA: favores   
rule "favores a personajes" 
	when 
		$f : DarFavor($s : sujeto, $a : afectadoP);
	then 
		respuestaReglas.add($a.getNombre() + " obtiene " + $s.getInventario().toString() + " debido a tener el favor de " + $s.getNombre());
		
		$a.getInventario().addAll($s.getInventario());
		
		$s.setInventario(new LinkedList<Objeto>());
		update($a);
		update($s);
end



// Heroe entra al laberinto fase 3.2

rule "Heroe entra al laberinto"

	when 
		$h : Heroe();
		$t: Objeto(nombre == "Tributo") from $h.inventario;
		$m : Personaje(nombre=="Minotauro");
		$l : Objeto(nombre=="Localizacion Minotauro");
		Vivo(sujeto==$m);
		
	then
		$h.getInventario().add($l);
		$h.getInventario().remove($t);
		Accion heroeObtieneLoc = new Obtener($h, $l);
		insert(heroeObtieneLoc);
		respuestaReglas.add($h.getNombre() + " accede al laberinto y encuentra al minotauro al tener"+ $l.toString());
		update($h);
end

//Fase 3.5
rule "heroe preso de minotauro"

	when 
		$h : Heroe();
		$t: Objeto(nombre == "Localizacion Minotauro") from $h.inventario;
		not Objeto(nombre == "Espada") from $h.inventario;
		$m : Personaje(nombre=="Minotauro");
		$v : Vivo(sujeto==$m);
		$lh : Libre(sujeto == $h);
		
	then
	
		Apresar mApresaHeroe = new Apresar($m, $h);
		Preso pHeroe = new Preso($h);
	    respuestaReglas.add($m.getNombre() + " apresa a " +  $h.getNombre());
	    
		insert(mApresaHeroe);
		insert(pHeroe);
		retract($lh);
		
end

//Fase 3.5
rule "heroe libera a heroe de minotauro"
	when
		$hA : Apresar(sujeto.nombre == "Minotauro");
		$pA : Preso(sujeto == $hA.afectadoP);
		$hl : Matar(afectadoP.nombre == "Minotauro");
		Objeto(nombre == "Hilo") from $hA.afectadoP.inventario or Objeto(nombre == "Hilo") from $hl.sujeto.inventario ;
	then
		
		Liberar hLiberah = new Liberar($pA.getSujeto(), $hA.getAfectadoP());
		Libre hLibre = new Libre($hA.getAfectadoP());
		
		respuestaReglas.add("El héroe macho alfa llamado "+ $hl.getSujeto().getNombre()+ " libera a " + $hA.getAfectadoP().getNombre() + " y escapan del laberinto");
		insert(hLiberah);
		insert(hLibre);
		retract($pA);
		retract($hA);
	 
end
// Fase 3.2
rule "heroe mata minotauro"

	when 
		$h : Heroe();
		$t: Objeto(nombre == "Localizacion Minotauro") from $h.inventario;
		$e: Objeto(nombre == "Espada") from $h.inventario;
		$m : Personaje(nombre=="Minotauro");
		$v : Vivo(sujeto==$m);
		
	then
		$h.getInventario().addAll($m.getInventario());
		$m.setInventario(new LinkedList<Objeto>());
	    respuestaReglas.add($h.getNombre() + " mata a " +  $m.getNombre() );
		
		update($h);
		update($m);
		Muerto m = new Muerto($m);
		Matar hMataMinotauro = new Matar($h, $m);
		insert(hMataMinotauro);
		insert(m);
		retract($v);
		
end


//Fase 3.2

rule "salida del laberinto"
	when
		$h : Heroe();
		$hilo: Objeto(nombre == "Hilo") from $h.inventario;
		Objeto(nombre == "Cuerno") from $h.inventario;
		$m : Personaje(nombre=="Minos");


		$i : Libre (sujeto.nombre == "Ícaro");
		$d : Libre (sujeto.nombre == "Dédalo");
		
		not Objeto(nombre == "Alas") from $i.sujeto.inventario;
		not Objeto(nombre == "Alas") from $d.sujeto.inventario;
		
	then
		respuestaReglas.add($h.getNombre() + " consigue salir del laberinto al tener " +  $hilo.getNombre() );
		Enojar E = new Enojar($h,$m);
		insert(E);
		Accion minosApresaIcaro = new Apresar($m, $i.getSujeto());
		Accion minosApresaDedalo = new Apresar($m, $d.getSujeto());
		
		Estado icaroApresada = new Preso($i.getSujeto());
		Estado dedaloApresada = new Preso($d.getSujeto());
		respuestaReglas.add($m.getNombre() + " apresa a Ícaro y Dédalo porque "+$h.getNombre()+" consigue salir vivo del laberinto." );
		
		retract ($i);
		insert(minosApresaIcaro);
		insert(minosApresaDedalo);
		retract ($d);
		insert(icaroApresada);
		insert(dedaloApresada);
		
	end

//Fase 3.2

rule "fabricacion de alas "
when
	
	$i : Preso (sujeto.nombre == "Ícaro");
	$d : Preso (sujeto.nombre == "Dédalo");
	$AI : Objeto(nombre == "Alas");
	$AD : Objeto(nombre == "Alas");
				
then
	$i.getSujeto().getInventario().add($AI);
	$d.getSujeto().getInventario().add($AD);

	
	Libre LI = new Libre ($i.getSujeto());
	Libre LD = new Libre ($d.getSujeto());
	
	respuestaReglas.add($d.getSujeto().getNombre() + " fabrica dos pares de alas con cera y plumas del laberinto" );
	respuestaReglas.add($d.getSujeto().getNombre() + " y " +$i.getSujeto().getNombre() +" escapan volando.");
	
	retract($i);
	retract($d);
	insert(LI);
	insert(LD);

	
end

//Fase 3.3
rule "muerte de Icaro"
when
	$i : Vivo(sujeto.nombre == "Ícaro");
	Objeto(nombre == "Alas") from $i.sujeto.inventario;
				
then
	Muerto muerteIcaro = new Muerto ($i.getSujeto());
	respuestaReglas.add($i.getSujeto().getNombre() + " muere debido a volar muy cerca del sol." );
	retract($i);
	insert(muerteIcaro);	
end

//Fase 3.4 
rule "Dedalo entrega alas a Perseo"

when 
	$dl : Libre(sujeto.nombre == "Dédalo")
	$alas: Objeto(nombre == "Alas") from $dl.sujeto.inventario;
	$m : Matar(afectadoP.nombre == "Minotauro")
	Enojar(sujeto.nombre == "Casiopea", afectadoP.nombre == "Poseidón");
then 
	$m.getSujeto().getInventario().add($alas);
	$dl.getSujeto().getInventario().remove($alas);	
	respuestaReglas.add("Dédalo entrega las alas a " + $m.getSujeto().getNombre() );
	update($dl.getSujeto());
	update($m.getSujeto());
	
end
	


//5º REGLA: perseo roba el ojo de las grayas
rule "perseo roba el ojo de las grayas"
	when 
		$p : Heroe();
		not Objeto(nombre == "Alas") from $p.inventario;
		$g : Personaje(nombre == "Grayas");
		$ojo: Objeto(nombre == "Ojo Graya") from $g.inventario;
		$mn : Objeto (nombre == "Mapa Ninfas") from $g.inventario;
		$mg : Objeto(nombre == "Mapa Grayas") from $p.inventario;
		$ch : Objeto(nombre == "Casco") from $p.inventario;
	then
		respuestaReglas.add($p.getNombre() + " roba " +  $ojo.getNombre() + " de " + $g.getNombre() + " debido a tener " + $ch.getNombre() );
		
		$p.getInventario().add($ojo);
		$g.getInventario().remove($ojo);
				Accion perseoObtieneOjo = new Obtener($p, $ojo);
		
		insert(perseoObtieneOjo);
		update($p);
		update($g);
end

//6º REGLA: perseo intercambia ojo por mapa ninfa

rule "perseo intercambio ojo por mapa ninfas"
	when
		$g : Personaje(nombre == "Grayas");
		$mn: Objeto(nombre == "Mapa Ninfas") from $g.inventario;
		$p : Heroe();
		$ojo: Objeto(nombre == "Ojo Graya") from $p.inventario;
	then 
		respuestaReglas.add($p.getNombre() + " localiza a las ninfas debido a intercambio de " +  $ojo.getNombre() +  " por el " + $mn.getNombre() );
		
		$p.getInventario().add($mn);
		$g.getInventario().add($ojo);
		$p.getInventario().remove($ojo);
		$g.getInventario().remove($mn);
		
		Accion perseoObtieneMapaN = new Obtener($p, $mn);
		Accion grayasObtieneOjo = new Obtener($g, $ojo);
			
		insert(perseoObtieneMapaN);
		insert(grayasObtieneOjo);
		update($p);
		update($g);
end
//7º REGLA: perseo obtiene inventario ninfas

rule "perseo obtiene inventario ninfas"
	when
		$p : Heroe();
		$mn: Objeto(nombre == "Mapa Ninfas") from $p.inventario;
		$n : Personaje (nombre == "Ninfas", inventario.empty == false );
	then 
		respuestaReglas.add($p.getNombre() + " obtiene " + $n.getInventario().toString() + " debido a tener a las ninfas localizadas.");
		

				
		$p.getInventario().addAll($n.getInventario());
		$n.setInventario(new LinkedList<Objeto>());
		
		update($p);
		update($n);
end

rule "Capacidad Invisible"
	
    when
		$p:Personaje();
		$ha: Objeto(nombre == "Casco") from $p.inventario;
		not CapacidadInvisible (sujeto==$p);
      	
    then
   		CapacidadInvisible c = new CapacidadInvisible($p);
		insert(c);		
end

rule "Capacidad Reflejo" 
    when
    	
		$p:Personaje ();
		$ha: Objeto(nombre == "Escudo") from $p.inventario;
		not CapacidadReflejo (sujeto==$p);
      	
    then
   		CapacidadReflejo c = new CapacidadReflejo($p);
		insert(c);		
end

rule "Capacidad Vuelo" 
    when
    	
		$p:Personaje ();
		Objeto(nombre == "Sandalias") from $p.inventario or Objeto(nombre == "Alas") from $p.inventario;
		not CapacidadVuelo (sujeto==$p);
      	
    then
   		CapacidadVuelo c = new CapacidadVuelo($p);
		insert(c);		
end

//8º REGLA: Matar a medusa, 
rule "matar a medusa"
	when
		$medusaViva: Vivo(sujeto.nombre == "Medusa");
		$p : Heroe();
		$ha: Objeto(nombre == "Hoz Acero") from $p.inventario;
		CapacidadInvisible(sujeto == $p );
		CapacidadReflejo(sujeto == $p );
		CapacidadVuelo(sujeto == $p );
	then
		respuestaReglas.add($p.getNombre() + " mata a  " + $medusaViva.getSujeto().getNombre()  + " debido a tener " + $p.getInventario().toString() );
		respuestaReglas.add($p.getNombre() + " obtiene " + $medusaViva.getSujeto().getInventario().toString() + " debido a matar a " + $medusaViva.getSujeto().getNombre());
		Accion perseoMataMedusa = new Matar($p, $medusaViva.getSujeto());
		Estado medusaMuerta = new Muerto($medusaViva.getSujeto());
		

		$p.getInventario().addAll($medusaViva.getSujeto().getInventario());
		$medusaViva.getSujeto().setInventario(new LinkedList<Objeto>());
		
		insert(medusaMuerta);
		insert(perseoMataMedusa);
		update($p);
		update($medusaViva.getSujeto());
		retract($medusaViva);	
end

//9º REGLA: Matar a ceto,usada en 3.1 , 3.3 y 3.6. Generalizada para cualquier heroe y cualquier preso de Ceto
rule "matar a ceto para liberar a "
	when
		$p : Heroe();
		$cm: Objeto(nombre == "Cabeza") from $p.inventario;
		$cetoVivo : Vivo(sujeto.nombre == "Ceto");
		$A : Apresar(sujeto.nombre=="Ceto", $andromedaPresa: afectadoP);
		
		//$andromedaPresa : Preso(sujeto.nombre == "Andrómeda");
		
	then 
		respuestaReglas.add($p.getNombre() + " mata a " + $cetoVivo.getSujeto().getNombre() + " debido a tener " + $cm.getNombre());
		respuestaReglas.add($p.getNombre() + " libera a " + $andromedaPresa.getNombre() + " debido a matar a " + $cetoVivo.getSujeto().getNombre());
		
		Accion perseoMataCeto = new Matar($p, $cetoVivo.getSujeto());
		Estado cetoMuerto = new Muerto($cetoVivo.getSujeto());
		Accion liberarAndromeda = new Liberar($p, $andromedaPresa);
		Estado andromedaLibre = new Libre($andromedaPresa);
		
		insert (perseoMataCeto);
		insert(cetoMuerto);
		insert(liberarAndromeda);
		insert (andromedaLibre);
		
		retract ($andromedaPresa);
		retract($cetoVivo);

end


// REGLA PARA 3.8

rule "heroe obtiene ejercito" 
	when 
		$h : Heroe();
		$f1 : DarFavor(sujeto.nombre=="Meda", afectadoP==$h);
		$f2 : DarFavor(sujeto.nombre=="Rey", afectadoP==$h);
		$ejercito : Objeto (nombre == "Ejercito");
		
	then 
	
	    respuestaReglas.add($h.getNombre() + " motiva a un grupo de héroes para formar un ejercito al tener " + $f1.toString() + " y  "+  $f2.toString() );
		$h.getInventario().add($ejercito);
		Accion heroeObtieneEjercito = new Obtener($h, $ejercito);
		
		insert(heroeObtieneEjercito);	

end
// REGLA PARA 3.8

rule "heroe encuentra el vellocino" 
	when 
		$h : Heroe();
		Objeto(nombre == "Ejercito") from $h.inventario;
		Objeto(nombre == "Barco") from $h.inventario;
		$localizacionVellocino : Objeto (nombre == "Localizacion Vellocino");
		
	then 
	
	    respuestaReglas.add("Tras zarpar, el ejercito comandado por "+$h.getNombre() + " encuentra el Dragon que proteje el Vellocino de oro" );
	    $h.getInventario().add($localizacionVellocino);
	    
	    Accion heroeObtieneLoc = new Obtener($h, $localizacionVellocino);
		
		insert(heroeObtieneLoc);		

end
// REGLA PARA 3.8

rule "heroe vence al dragón" 
	when 
		$h : Heroe();
		$d : Personaje (nombre == "Dragón");
		$U : Objeto(nombre == "Unguento Invencibilidad") from $h.inventario;
		$localizacionVellocino : Objeto(nombre == "Localizacion Vellocino") from $h.inventario;
		$Vellocino : Objeto(nombre == "Vellocino") from $d.inventario;
		$dragonVivo : Vivo(sujeto.nombre == "Dragón");
		
		
	then 
	
	    respuestaReglas.add("El ejercito de "+$h.getNombre() + " vence al Dragón al estar protegidos por el "+ $U.getNombre() );
	    
	    $h.getInventario().addAll($d.getInventario());
		$d.setInventario(new LinkedList<Objeto>());
		Accion heroeObtieneVellocino = new Obtener($h, $Vellocino);
		
		
		Accion heroeMataDragon = new Matar($h, $d);
		Estado dragonMuerto = new Muerto($d);

		insert(heroeObtieneVellocino);
		insert (heroeMataDragon);
		insert(dragonMuerto);

		retract ($dragonVivo);
		


end
// REGLA PARA 3.8

rule "Capacidad Curativa" 
    when
    	
		$p:Personaje ();
		$ha: Objeto(nombre == "Vellocino") from $p.inventario;
		not CapacidadCurativa (sujeto==$p);
      	
    then
   		CapacidadCurativa c = new CapacidadCurativa($p);
		insert(c);		
end
// REGLA PARA 3.8

rule "Los heroes retornan victoriosos con el vellocino" 
    when
    	
		$h : Heroe();
		$ha: Objeto(nombre == "Vellocino") from $h.inventario;

      	
    then
    
    	respuestaReglas.add($h.getNombre() + " y su ejercito retornan victoriosos con el vellocino" );	
end


// Regla genérica 1: si x apresa a y, cuando x muere y queda libre.

 rule "liberar apresados de muertos"
    when
    	
      	$A : Apresar($s : sujeto, $a : afectadoP);
      	Muerto(sujeto.nombre==$s.nombre);
      	Matar($h : sujeto, afectadoP==$s );
      	$p : Preso(sujeto.nombre==$a.nombre);
      	not Libre(sujeto==$a);
      	not Liberar( sujeto==$h,afectadoP==$a);
      	
    then
   		
   		Liberar liberacion = new Liberar($h,$a);
      	Estado presoLibre = new Libre($a);
      	retract($A);
		retract($p);
		insert(liberacion); 
		insert(presoLibre);
		
end


//Regla genérica 1: si x tiene objeto Y etonces obtiene capacidad Z.




// QUERIES para buscar las respuestas a las preguntas

//1ª QUERY: buscar liberar

query buscarLiberar(Personaje s, Personaje a)
	$r : Liberar (sujeto == s, afectadoP == a);
end

//2ª QUERY: buscar dar favor

query buscarDarFavor(Personaje s, Personaje a)
	$r : DarFavor (sujeto == s, afectadoP == a);
end

//3ª QUERY: buscar enojar

query buscarEnojar(Personaje s, Personaje a)
	$r : Enojar (sujeto == s, afectadoP == a);
end

//4ª QUERY: buscar apresar

query buscarApresar(Personaje s, Personaje a)
	$r : Apresar (sujeto == s, afectadoP == a);
end

//5ª QUERY: buscar matar

query buscarMatar(Personaje s, Personaje a)
	$r : Matar (sujeto == s, afectadoP == a);
end

//6ª QUERY: buscar ontener

query buscarObtener(Personaje s, Objeto o)
	$r : Obtener (sujeto == s, afectadoC == o);
end

//7ª QUERY: buscar robar

query buscarRobar(Personaje s, Personaje a, Objeto o)
	$r : Robar (sujeto == s, afectadoP == a, objRobado == o);
end

//8ª QUERY: buscar capacidad invisible

query buscarInvisible(Personaje s)
	$r : CapacidadInvisible (sujeto == s);
end

//9ª QUERY: buscar capacidad reflejo

query buscarReflejo(Personaje s)
	$r : CapacidadReflejo (sujeto == s);
end

//10ª QUERY: buscar capacidad vuelo

query buscarVuelo(Personaje s)
	$r : CapacidadVuelo (sujeto == s);
end

//11ª QUERY: buscar libre

query buscarLibre(Personaje s)
	$r : Libre (sujeto == s);
end

//12ª QUERY: buscar muerto

query buscarMuerto(Personaje s)
	$r : Muerto (sujeto == s);
end

//13ª QUERY: buscar preso

query buscarPreso(Personaje s)
	$r : Preso (sujeto == s);
end

//13ª QUERY: buscar vivo

query buscarVivo(Personaje s)
	$r : Vivo (sujeto == s);
end

