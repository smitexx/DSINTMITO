//created on: 8 nov. 2020
package dsiRules

//list any import classes here.

import clasesMito.*;
import clasesMito.acciones.*;
import clasesMito.estados.*;
import clasesMito.Personajes.*;
import java.util.List;
import java.util.LinkedList;

//declare any global variables here

global java.util.List respuestaReglas;

//REGLAS DESDE EL PRINCIPIO

//1º REGLA: TODOS LOS PERSONAJES LIBRES : 
rule "personajes libres y vivos"

    when
        //conditions y definimos variable $p
      	$p : Personaje(nombre != "Ceto");
      	not Muerto(sujeto == $p);
      	not Preso(sujeto == $p);
      	
    then
        //actions
        Estado libre = new Libre($p);
        insert(libre);
		Estado vivo = new Vivo($p);
		insert(vivo);
		
end
//1.1 Regla: excepcion, ceto preso

rule "CetoPreso"

    when
        //conditions y definimos variable $p
      	$p : Personaje(nombre == "Ceto");
      	not Muerto(sujeto == $p );
    then
        //actions
        Estado vivo = new Vivo($p);
        Estado presoCeto  = new Preso($p);
        insert(presoCeto);
		insert(vivo);
		
end

//1.2 Regla: llenar inventario vacios
rule "llenar inventarios vacios"
	when
		$p: Personaje(inventario == null); 
	then
		$p.setInventario(new LinkedList<Objeto>());
		update($p);
end






//2º REGLA: casiopea enoja a poseidon 
rule "casiopea enoja a poseidon"

    when
      	$a: Enojar(sujeto.nombre == "Casiopea", afectadoP != null, afectadoP.nombre == "Poseidón");
      	$p: Personaje(nombre == "Ceto");
    then
        //actions
        respuestaReglas.add($p.getNombre() + " queda libre debido a enojo de " + $a.getAfectadoP().getNombre() + " hacia " + $a.getSujeto().getNombre());
		Accion poseidonLiberaCeto = new Liberar($a.getAfectadoP(), $p);
		Estado libreCeto = new Libre ($p) ;
		insert (poseidonLiberaCeto);
		insert (libreCeto);
			
end
//3º REGLA: andromeda es apresada por ceto

rule "andromeda es apresada por ceto"
	when 
		$e : Libre(sujeto.nombre == "Ceto")
	    Vivo(sujeto.nombre == "Ceto")
		
		$p : Personaje(nombre == "Andrómeda")
		$lib : Libre(sujeto == $p)
	then 
		respuestaReglas.add(  $p +" queda presa debido a estar " + $e.getSujeto() + " libre.");
		
		Accion cetoApresaAndromeda = new Apresar($e.getSujeto(), $p);
		Estado andromedaApresada = new Preso($p);
		
		retract ($lib);
		insert(cetoApresaAndromeda);
		insert(andromedaApresada);
		
end

//4º REGLA: favores de dioses a Perseo  
rule "favores de dioses a Perseo" 
	when 
		$f : DarFavor($s : sujeto, $a : afectadoP);
	then 
		respuestaReglas.add($a.getNombre() + " obtiene " + $s.getInventario().toString() + " debido a tener el favor de " + $s.getNombre());
		
		$a.getInventario().addAll($s.getInventario());

		$s.setInventario(new LinkedList<Objeto>());
		update($a);
		update($s);
end

//5º REGLA: perseo roba el ojo de las grayas
rule "perseo roba el ojo de las grayas"
	when 
		$g : Personaje(nombre == "Grayas");
		$ojo: Objeto(nombre == "Ojo Graya") from $g.inventario;
		$mn : Objeto (nombre == "Mapa Ninfas") from $g.inventario;
		$p : Heroe();
		$mg : Objeto(nombre == "Mapa Grayas") from $p.inventario;
		$ch : Objeto(nombre == "Casco") from $p.inventario;
	then
		respuestaReglas.add($p.getNombre() + " roba " +  $ojo.getNombre() + " de " + $g.getNombre() + " debido a tener " + $ch.getNombre() );
		
		$p.getInventario().add($ojo);
		Accion perseoObtieneOjo = new Obtener($p, $ojo);
		$g.getInventario().remove($ojo);
		
		insert(perseoObtieneOjo);
		update($p);
		update($g);
end

//6º REGLA: perseo intercambia ojo por mapa ninfa

rule "perseo intercambio ojo por mapa ninfas"
	when
		$g : Personaje(nombre == "Grayas");
		$mn: Objeto(nombre == "Mapa Ninfas") from $g.inventario;
		$p : Heroe();
		$ojo: Objeto(nombre == "Ojo Graya") from $p.inventario;
	then 
		respuestaReglas.add($p.getNombre() + " localiza a las ninfas debido a intercambio de " +  $ojo.getNombre() +  " por el " + $mn.getNombre() );
		
		$p.getInventario().add($mn);
		$g.getInventario().add($ojo);
		$p.getInventario().remove($ojo);
		$g.getInventario().remove($mn);
		
		Accion perseoObtieneMapaN = new Obtener($p, $mn);
		Accion grayasObtieneOjo = new Obtener($g, $ojo);
			
		insert(perseoObtieneMapaN);
		insert(grayasObtieneOjo);
		update($p);
		update($g);
end
//7º REGLA: perseo obtiene inventario ninfas

rule "perseo obtiene inventario ninfas"
	when
		$p : Heroe();
		$mn: Objeto(nombre == "Mapa Ninfas") from $p.inventario;
		$n : Personaje (nombre == "Ninfas", inventario.empty == false );
	then 
		respuestaReglas.add($p.getNombre() + " obtiene " + $n.getInventario().toString() + " debido a tener a las ninfas localizadas.");
		

				
		$p.getInventario().addAll($n.getInventario());
		$n.setInventario(new LinkedList<Objeto>());
		
		update($p);
		update($n);
end

rule "Capacidad Invisible"
    when
    	
		$p:Personaje ();
		$ha: Objeto(nombre == "Casco") from $p.inventario;
		not CapacidadInvisible (sujeto==$p);
      	
    then
        respuestaReglas.add($p.getNombre() + " obtiene capacidad de invisibilidad" );
   		CapacidadInvisible c = new CapacidadInvisible($p);
		insert(c);		
end

rule "Capacidad Reflejo"
    when
    	
		$p:Personaje ();
		$ha: Objeto(nombre == "Escudo") from $p.inventario;
		not CapacidadReflejo (sujeto==$p);
      	
    then
        respuestaReglas.add($p.getNombre() + " obtiene capacidad reflejo" );
   		CapacidadReflejo c = new CapacidadReflejo($p);
		insert(c);		
end

rule "Capacidad Vuelo"
    when
    	
		$p:Personaje ();
		$ha: Objeto(nombre == "Sandalias") from $p.inventario;
		not CapacidadVuelo (sujeto==$p);
      	
    then
    	respuestaReglas.add($p.getNombre() + " obtiene capacidad vuelo" );
   		CapacidadVuelo c = new CapacidadVuelo($p);
		insert(c);		
end

//8º REGLA: Matar a medusa
rule "matar a medusa"
	when
		$medusaViva: Vivo(sujeto.nombre == "Medusa");
		$p : Heroe();
		$ha: Objeto(nombre == "Hoz Acero") from $p.inventario;
		CapacidadInvisible(sujeto == $p );
		CapacidadReflejo(sujeto == $p );
		CapacidadVuelo(sujeto == $p );
	then
		respuestaReglas.add($p.getNombre() + " mata a  " + $medusaViva.getSujeto().getNombre()  + " debido a tener " + $p.getInventario().toString() );
		respuestaReglas.add($p.getNombre() + " obtiene " + $medusaViva.getSujeto().getInventario().toString() + " debido a matar a " + $medusaViva.getSujeto().getNombre());
		Accion perseoMataMedusa = new Matar($p, $medusaViva.getSujeto());
		Estado medusaMuerta = new Muerto($medusaViva.getSujeto());
		

		$p.getInventario().addAll($medusaViva.getSujeto().getInventario());
		$medusaViva.getSujeto().setInventario(new LinkedList<Objeto>());
		
		insert(medusaMuerta);
		insert(perseoMataMedusa);
		update($p);
		update($medusaViva.getSujeto());
		retract($medusaViva);	
end

//9º REGLA: Matar a ceto
rule "matar a ceto"
	when
		$p : Heroe();
		$cm: Objeto(nombre == "Cabeza") from $p.inventario;
		$cetoVivo : Vivo(sujeto.nombre == "Ceto");
		$andromedaPresa : Preso(sujeto.nombre == "Andrómeda");
		
	then 
		respuestaReglas.add($p.getNombre() + " mata a " + $cetoVivo.getSujeto().getNombre() + " debido a tener " + $cm.getNombre());
		respuestaReglas.add($p.getNombre() + " libera a " + $andromedaPresa.getSujeto().getNombre() + " debido a matar a " + $cetoVivo.getSujeto().getNombre());
		
		Accion perseoMataCeto = new Matar($p, $cetoVivo.getSujeto());
		Estado cetoMuerto = new Muerto($cetoVivo.getSujeto());
		Accion liberarAndromeda = new Liberar($p, $andromedaPresa.getSujeto());
		Estado andromedaLibre = new Libre($andromedaPresa.getSujeto());
		
		insert (perseoMataCeto);
		insert(cetoMuerto);
		insert(liberarAndromeda);
		insert (andromedaLibre);
		
		retract ($andromedaPresa);
		retract($cetoVivo);

end

// Regla genérica 1: si x apresa a y, cuando x muere y queda libre.

 rule "liberar apresados de muertos"
    when
    	
      	$A : Apresar($s : sujeto, $a : afectadoP);
      	Muerto(sujeto.nombre==$s.nombre);
      	Matar($h : sujeto, afectadoP==$s );
      	$p : Preso(sujeto.nombre==$a.nombre);
      	not Libre(sujeto==$a);
      	not Liberar( sujeto==$h,afectadoP==$a);
      	
    then
   		
   		System.out.println($h.getInventario().toString());//
   		Liberar liberacion = new Liberar($h,$a);
      	Estado presoLibre = new Libre($a);
      	retract($A);
		retract($p);
		insert(liberacion); 
		insert(presoLibre);
		
end


//Regla genérica 1: si x tiene objeto Y etonces obtiene capacidad Z.




// QUERIES para buscar las respuestas a las preguntas

//1ª QUERY: buscar liberar

query buscarLiberar(Personaje s, Personaje a)
	$r : Liberar (sujeto == s, afectadoP == a);
end

//2ª QUERY: buscar dar favor

query buscarDarFavor(Personaje s, Personaje a)
	$r : DarFavor (sujeto == s, afectadoP == a);
end

//3ª QUERY: buscar enojar

query buscarEnojar(Personaje s, Personaje a)
	$r : Enojar (sujeto == s, afectadoP == a);
end

//4ª QUERY: buscar apresar

query buscarApresar(Personaje s, Personaje a)
	$r : Apresar (sujeto == s, afectadoP == a);
end

//5ª QUERY: buscar matar

query buscarMatar(Personaje s, Personaje a)
	$r : Matar (sujeto == s, afectadoP == a);
end

//6ª QUERY: buscar ontener

query buscarObtener(Personaje s, Objeto o)
	$r : Obtener (sujeto == s, afectadoC == o);
end

//7ª QUERY: buscar robar

query buscarRobar(Personaje s, Personaje a, Objeto o)
	$r : Robar (sujeto == s, afectadoP == a, objRobado == o);
end

//8ª QUERY: buscar capacidad invisible

query buscarInvisible(Personaje s)
	$r : CapacidadInvisible (sujeto == s);
end

//9ª QUERY: buscar capacidad reflejo

query buscarReflejo(Personaje s)
	$r : CapacidadReflejo (sujeto == s);
end

//10ª QUERY: buscar capacidad vuelo

query buscarVuelo(Personaje s)
	$r : CapacidadVuelo (sujeto == s);
end

//11ª QUERY: buscar libre

query buscarLibre(Personaje s)
	$r : Libre (sujeto == s);
end

//12ª QUERY: buscar muerto

query buscarMuerto(Personaje s)
	$r : Muerto (sujeto == s);
end

//13ª QUERY: buscar preso

query buscarPreso(Personaje s)
	$r : Preso (sujeto == s);
end

//13ª QUERY: buscar vivo

query buscarVivo(Personaje s)
	$r : Vivo (sujeto == s);
end

